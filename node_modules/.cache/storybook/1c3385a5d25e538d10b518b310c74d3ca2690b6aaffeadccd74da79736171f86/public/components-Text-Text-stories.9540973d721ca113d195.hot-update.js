"use strict";
self["webpackHotUpdatesawatzky_matthew_ui_garden"]("components-Text-Text-stories",{

/***/ "./src/components/Text/Text.tsx":
/*!**************************************!*\
  !*** ./src/components/Text/Text.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-components */ "./node_modules/styled-components/dist/styled-components.browser.esm.js");
function _tagged_template_literal(strings, raw) {
    if (!raw) {
        raw = strings.slice(0);
    }
    return Object.freeze(Object.defineProperties(strings, {
        raw: {
            value: Object.freeze(raw)
        }
    }));
}
function _templateObject() {
    var data = _tagged_template_literal([
        "\n  font-size: 16px;\n  line-height: 1.5;\n  color: ",
        ";\n"
    ]);
    _templateObject = function _templateObject() {
        return data;
    };
    return data;
}


var TextContainer = styled_components__WEBPACK_IMPORTED_MODULE_1__["default"].p(_templateObject(), function(props) {
    return props.theme.textColor;
});
var Text = function(param) {
    var children = param.children, className = param.className;
    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(TextContainer, {
        className: className
    }, children);
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Text);
Text.__docgenInfo = {
    description: "",
    methods: [],
    displayName: "Text",
    props: {
        children: {
            required: true,
            tsType: {
                name: "ReactReactNode",
                raw: "React.ReactNode"
            },
            description: ""
        },
        className: {
            required: false,
            tsType: {
                name: "string"
            },
            description: ""
        }
    }
};


/***/ })

});
//# sourceMappingURL=components-Text-Text-stories.9540973d721ca113d195.hot-update.js.map